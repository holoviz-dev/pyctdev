name: packages
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+a[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+b[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'

jobs:
  conda_build:
    name: Build Conda Packages
    runs-on: 'ubuntu-latest'
    defaults:
      run:
        shell: bash -l {0}
    env:
      PKG_TEST_PYTHON: "--test-python=py37"
      PKG_TEST_GROUP: "--test-group=all"
      PYCTDEV_ECOSYSTEM: "conda"
    steps:
      - uses: actions/checkout@v2
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow -f
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          python-version: 3.8
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: conda setup
        run: |
          conda config --set always_yes True
          conda deactivate
          pip install -e .
          conda install pip
          doit ecosystem_setup
          doit package_build
          pip uninstall -y doit pyctdev
          rm -f .doit.db
          doit ecosystem_setup
          conda install -y --use-local pyctdev
      - name: conda build
        run: doit package_build $PKG_TEST_PYTHON $PKG_TEST_GROUP
      - name: conda dev upload
        if: (contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc'))
        run: doit package_upload --token=${{ secrets.CONDA_UPLOAD_TOKEN }} --label=dev
      - name: conda main upload
        if: (!(contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        run: doit package_upload --token=${{ secrets.CONDA_UPLOAD_TOKEN }} --label=dev --label=main
  pip_build:
    name: Build PyPI Packages
    runs-on: 'ubuntu-latest'
    defaults:
      run:
        shell: bash -l {0}
    env:
      PKG_TEST_GROUP: "--test-group=all"
      PYPI: "https://upload.pypi.org/legacy/"
      PIP_FORMATS: "sdist bdist_wheel"
      PYCTDEV_ECOSYSTEM: "pip"
    steps:
      - uses: actions/checkout@v2
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow -f
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          python-version: 3.8
      - name: conda setup
        run: |
          conda config --set always_yes True
          pip install -e .
          doit ecosystem_setup
      - name: pip build
        run: doit package_build $PKG_TEST_GROUP --formats="$PIP_FORMATS" --sdist-run-tests
      - name: pip upload
        run: doit ecosystem=pip package_upload -u ${{ secrets.PPU }} -p ${{ secrets.PPP }} -r $PYPI
